<?php
/**
 * BelVG LLC.
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the EULA
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://store.belvg.com/BelVG-LICENSE-COMMUNITY.txt
 *
 ********************************************************************
 * @category   BelVG
 * @package    BelVG_ProductTabs
 * @copyright  Copyright (c) BelVG LLC. (http://www.belvg.com)
 * @license    http://store.belvg.com/BelVG-LICENSE-COMMUNITY.txt
 */
namespace BelVG\ProductTabs\Model\ResourceModel\Tab;

/**
 * Class Collection
 * @package BelVG\ProductTabs\Model\ResourceModel\Tab
 */
class Collection extends \Magento\Framework\Model\ResourceModel\Db\Collection\AbstractCollection
{
    /**
     * @var string
     */
    protected $_idFieldName = 'tab_id';

    /**
     * @var \Magento\Store\Model\StoreManagerInterface
     */
    protected $storeManager;

    /**
     * Collection constructor.
     * @param \Magento\Store\Model\StoreManagerInterface $storeManager
     * @param \Magento\Framework\Data\Collection\EntityFactoryInterface $entityFactory
     * @param \Psr\Log\LoggerInterface $logger
     * @param \Magento\Framework\Data\Collection\Db\FetchStrategyInterface $fetchStrategy
     * @param \Magento\Framework\Event\ManagerInterface $eventManager
     * @param \Magento\Framework\DB\Adapter\AdapterInterface|null $connection
     * @param \Magento\Framework\Model\ResourceModel\Db\AbstractDb|null $resource
     */
    public function __construct(
        \Magento\Store\Model\StoreManagerInterface $storeManager,
        \Magento\Framework\Data\Collection\EntityFactoryInterface $entityFactory,
        \Psr\Log\LoggerInterface $logger,
        \Magento\Framework\Data\Collection\Db\FetchStrategyInterface $fetchStrategy,
        \Magento\Framework\Event\ManagerInterface $eventManager,
        \Magento\Framework\DB\Adapter\AdapterInterface $connection = null,
        \Magento\Framework\Model\ResourceModel\Db\AbstractDb $resource = null
    ) {
        $this->storeManager = $storeManager;
        parent::__construct($entityFactory, $logger, $fetchStrategy, $eventManager, $connection, $resource);
    }

    /**
     *
     */
    protected function _construct()
    {
        $this->_init(
            \BelVG\ProductTabs\Model\Tab::class,
            \BelVG\ProductTabs\Model\ResourceModel\Tab::class
        );
    }

    /**
     * @return $this
     */
    public function joinWithBlockTypes(){
        $joinTable = 'belvg_producttabs_block_type';
        $this->getSelect()
            ->joinLeft(
                array(
                    'block_type' => $joinTable
                ),
                'main_table.block_type = block_type.block_type_id'
            );

        return $this;
    }

    /**
     * @return $this|\Magento\Framework\Model\ResourceModel\Db\Collection\AbstractCollection|void
     */
    protected function _initSelect()
    {
        parent::_initSelect(); // TODO: Change the autogenerated stub
        $joinTable = $this->getTable('belvg_producttabs_block_type');
        $this->getSelect()
            ->joinLeft(
                array(
                    'block_type' => $joinTable
                ),
                'main_table.block_type = block_type.block_type_id'
            );

        return $this;
    }

    /**
     * @param $productId
     * @return $this
     * @throws \Magento\Framework\Exception\NoSuchEntityException
     */
    public function addEntityFilter($productId)
    {
        //Filter by productId
        if ($productId !== 0) {

            $joinTableExcludedProducts = $this->getTable('belvg_producttabs_excluded_products');
            $this->getSelect()
                ->joinLeft(
                    array(
                        'excluded_products_table' => $joinTableExcludedProducts
                    ),
                    'main_table.tab_id = excluded_products_table.tab_id AND excluded_products_table.excluded_product_id = '
                    . $productId,
                    ['excluded_product_id' => 'excluded_product_id']
                )->where('excluded_products_table.excluded_product_id is NULL');

            //Filter by storeId
            $joinTableStore = $this->getTable('belvg_producttabs_store');
            $currentStoreId = $this->storeManager->getStore()->getId();
            $this->getSelect()
                ->joinLeft(
                    array(
                        'store_table' => $joinTableStore
                    ),
                    'main_table.tab_id = store_table.tab_id',
                    ['main_store_id' => 'store_id']
                )->where('store_table.store_id = 0 OR store_table.store_id = ' . $currentStoreId);

            //Filter for the individual products
            $this->getSelect()->where(
                'main_table.selection_of_products = 1 
                OR (main_table.selection_of_products = 2 AND main_table.product_id = ?)',
                $productId
            );
            $this->getSelect()->group('main_table.tab_id');
        }

        return $this;
    }

    /**
     * @return $this
     */
    public function addStoreData()
    {
        $this->_addStoreDataFlag = true;
        return $this;
    }
}
